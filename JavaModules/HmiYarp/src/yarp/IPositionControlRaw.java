/*******************************************************************************
 * Copyright (C) 2009-2020 Human Media Interaction, University of Twente, the Netherlands
 *
 * This file is part of the Articulated Social Agents Platform BML realizer (ASAPRealizer).
 *
 * ASAPRealizer is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License (LGPL) as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ASAPRealizer is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with ASAPRealizer.  If not, see http://www.gnu.org/licenses/.
 ******************************************************************************/
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yarp;

public class IPositionControlRaw {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected IPositionControlRaw(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IPositionControlRaw obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        yarpJNI.delete_IPositionControlRaw(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean getAxes(SWIGTYPE_p_int ax) {
    return yarpJNI.IPositionControlRaw_getAxes(swigCPtr, this, SWIGTYPE_p_int.getCPtr(ax));
  }

  public boolean setPositionModeRaw() {
    return yarpJNI.IPositionControlRaw_setPositionModeRaw(swigCPtr, this);
  }

  public boolean positionMoveRaw(int j, double ref) {
    return yarpJNI.IPositionControlRaw_positionMoveRaw__SWIG_0(swigCPtr, this, j, ref);
  }

  public boolean positionMoveRaw(SWIGTYPE_p_double refs) {
    return yarpJNI.IPositionControlRaw_positionMoveRaw__SWIG_1(swigCPtr, this, SWIGTYPE_p_double.getCPtr(refs));
  }

  public boolean relativeMoveRaw(int j, double delta) {
    return yarpJNI.IPositionControlRaw_relativeMoveRaw__SWIG_0(swigCPtr, this, j, delta);
  }

  public boolean relativeMoveRaw(SWIGTYPE_p_double deltas) {
    return yarpJNI.IPositionControlRaw_relativeMoveRaw__SWIG_1(swigCPtr, this, SWIGTYPE_p_double.getCPtr(deltas));
  }

  public boolean checkMotionDoneRaw(int j, SWIGTYPE_p_bool flag) {
    return yarpJNI.IPositionControlRaw_checkMotionDoneRaw__SWIG_0(swigCPtr, this, j, SWIGTYPE_p_bool.getCPtr(flag));
  }

  public boolean checkMotionDoneRaw(SWIGTYPE_p_bool flag) {
    return yarpJNI.IPositionControlRaw_checkMotionDoneRaw__SWIG_1(swigCPtr, this, SWIGTYPE_p_bool.getCPtr(flag));
  }

  public boolean setRefSpeedRaw(int j, double sp) {
    return yarpJNI.IPositionControlRaw_setRefSpeedRaw(swigCPtr, this, j, sp);
  }

  public boolean setRefSpeedsRaw(SWIGTYPE_p_double spds) {
    return yarpJNI.IPositionControlRaw_setRefSpeedsRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(spds));
  }

  public boolean setRefAccelerationRaw(int j, double acc) {
    return yarpJNI.IPositionControlRaw_setRefAccelerationRaw(swigCPtr, this, j, acc);
  }

  public boolean setRefAccelerationsRaw(SWIGTYPE_p_double accs) {
    return yarpJNI.IPositionControlRaw_setRefAccelerationsRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(accs));
  }

  public boolean getRefSpeedRaw(int j, SWIGTYPE_p_double ref) {
    return yarpJNI.IPositionControlRaw_getRefSpeedRaw(swigCPtr, this, j, SWIGTYPE_p_double.getCPtr(ref));
  }

  public boolean getRefSpeedsRaw(SWIGTYPE_p_double spds) {
    return yarpJNI.IPositionControlRaw_getRefSpeedsRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(spds));
  }

  public boolean getRefAccelerationRaw(int j, SWIGTYPE_p_double acc) {
    return yarpJNI.IPositionControlRaw_getRefAccelerationRaw(swigCPtr, this, j, SWIGTYPE_p_double.getCPtr(acc));
  }

  public boolean getRefAccelerationsRaw(SWIGTYPE_p_double accs) {
    return yarpJNI.IPositionControlRaw_getRefAccelerationsRaw(swigCPtr, this, SWIGTYPE_p_double.getCPtr(accs));
  }

  public boolean stopRaw(int j) {
    return yarpJNI.IPositionControlRaw_stopRaw__SWIG_0(swigCPtr, this, j);
  }

  public boolean stopRaw() {
    return yarpJNI.IPositionControlRaw_stopRaw__SWIG_1(swigCPtr, this);
  }

}
