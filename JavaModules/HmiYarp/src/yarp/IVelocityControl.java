/*******************************************************************************
 * Copyright (C) 2009-2020 Human Media Interaction, University of Twente, the Netherlands
 *
 * This file is part of the Articulated Social Agents Platform BML realizer (ASAPRealizer).
 *
 * ASAPRealizer is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License (LGPL) as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ASAPRealizer is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with ASAPRealizer.  If not, see http://www.gnu.org/licenses/.
 ******************************************************************************/
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yarp;

public class IVelocityControl {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected IVelocityControl(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IVelocityControl obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        yarpJNI.delete_IVelocityControl(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean getAxes(SWIGTYPE_p_int axes) {
    return yarpJNI.IVelocityControl_getAxes__SWIG_0(swigCPtr, this, SWIGTYPE_p_int.getCPtr(axes));
  }

  public boolean setVelocityMode() {
    return yarpJNI.IVelocityControl_setVelocityMode(swigCPtr, this);
  }

  public boolean velocityMove(int j, double sp) {
    return yarpJNI.IVelocityControl_velocityMove__SWIG_0(swigCPtr, this, j, sp);
  }

  public boolean velocityMove(SWIGTYPE_p_double sp) {
    return yarpJNI.IVelocityControl_velocityMove__SWIG_1(swigCPtr, this, SWIGTYPE_p_double.getCPtr(sp));
  }

  public boolean setRefAcceleration(int j, double acc) {
    return yarpJNI.IVelocityControl_setRefAcceleration(swigCPtr, this, j, acc);
  }

  public boolean setRefAccelerations(SWIGTYPE_p_double accs) {
    return yarpJNI.IVelocityControl_setRefAccelerations__SWIG_0(swigCPtr, this, SWIGTYPE_p_double.getCPtr(accs));
  }

  public boolean getRefAcceleration(int j, SWIGTYPE_p_double acc) {
    return yarpJNI.IVelocityControl_getRefAcceleration__SWIG_0(swigCPtr, this, j, SWIGTYPE_p_double.getCPtr(acc));
  }

  public boolean getRefAccelerations(SWIGTYPE_p_double accs) {
    return yarpJNI.IVelocityControl_getRefAccelerations__SWIG_0(swigCPtr, this, SWIGTYPE_p_double.getCPtr(accs));
  }

  public boolean stop(int j) {
    return yarpJNI.IVelocityControl_stop__SWIG_0(swigCPtr, this, j);
  }

  public boolean stop() {
    return yarpJNI.IVelocityControl_stop__SWIG_1(swigCPtr, this);
  }

  public int getAxes() {
    return yarpJNI.IVelocityControl_getAxes__SWIG_1(swigCPtr, this);
  }

  public boolean velocityMove(DVector data) {
    return yarpJNI.IVelocityControl_velocityMove__SWIG_2(swigCPtr, this, DVector.getCPtr(data), data);
  }

  public boolean setRefAccelerations(DVector data) {
    return yarpJNI.IVelocityControl_setRefAccelerations__SWIG_1(swigCPtr, this, DVector.getCPtr(data), data);
  }

  public boolean getRefAcceleration(int j, DVector data) {
    return yarpJNI.IVelocityControl_getRefAcceleration__SWIG_1(swigCPtr, this, j, DVector.getCPtr(data), data);
  }

  public boolean getRefAccelerations(DVector data) {
    return yarpJNI.IVelocityControl_getRefAccelerations__SWIG_1(swigCPtr, this, DVector.getCPtr(data), data);
  }

}
