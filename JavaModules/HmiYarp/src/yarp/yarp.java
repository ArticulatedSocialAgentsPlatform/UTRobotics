/*******************************************************************************
 * Copyright (C) 2009-2020 Human Media Interaction, University of Twente, the Netherlands
 *
 * This file is part of the Articulated Social Agents Platform BML realizer (ASAPRealizer).
 *
 * ASAPRealizer is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License (LGPL) as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ASAPRealizer is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with ASAPRealizer.  If not, see http://www.gnu.org/licenses/.
 ******************************************************************************/
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yarp;

public class yarp implements yarpConstants {
  public static void typedReaderMissingCallback() {
    yarpJNI.typedReaderMissingCallback();
  }

  public static int PAD_BYTES(int len, int pad) {
    return yarpJNI.PAD_BYTES(len, pad);
  }

  public static boolean read(ImageRgb dest, String src) {
    return yarpJNI.read__SWIG_0(ImageRgb.getCPtr(dest), dest, src);
  }

  public static boolean read(SWIGTYPE_p_yarp__sig__ImageOfT_yarp__sig__PixelBgr_t dest, String src) {
    return yarpJNI.read__SWIG_1(SWIGTYPE_p_yarp__sig__ImageOfT_yarp__sig__PixelBgr_t.getCPtr(dest), src);
  }

  public static boolean read(ImageRgba dest, String src) {
    return yarpJNI.read__SWIG_2(ImageRgba.getCPtr(dest), dest, src);
  }

  public static boolean read(ImageMono dest, String src) {
    return yarpJNI.read__SWIG_3(ImageMono.getCPtr(dest), dest, src);
  }

  public static boolean read(ImageFloat dest, String src) {
    return yarpJNI.read__SWIG_4(ImageFloat.getCPtr(dest), dest, src);
  }

  public static boolean write(ImageRgb src, String dest) {
    return yarpJNI.write__SWIG_0(ImageRgb.getCPtr(src), src, dest);
  }

  public static boolean write(SWIGTYPE_p_yarp__sig__ImageOfT_yarp__sig__PixelBgr_t src, String dest) {
    return yarpJNI.write__SWIG_1(SWIGTYPE_p_yarp__sig__ImageOfT_yarp__sig__PixelBgr_t.getCPtr(src), dest);
  }

  public static boolean write(ImageRgba src, String dest) {
    return yarpJNI.write__SWIG_2(ImageRgba.getCPtr(src), src, dest);
  }

  public static boolean write(ImageMono src, String dest) {
    return yarpJNI.write__SWIG_3(ImageMono.getCPtr(src), src, dest);
  }

  public static boolean write(ImageFloat src, String dest) {
    return yarpJNI.write__SWIG_4(ImageFloat.getCPtr(src), src, dest);
  }

  public static boolean write(Image src, String dest) {
    return yarpJNI.write__SWIG_5(Image.getCPtr(src), src, dest);
  }

}
