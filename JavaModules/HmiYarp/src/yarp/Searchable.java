/*******************************************************************************
 * Copyright (C) 2009-2020 Human Media Interaction, University of Twente, the Netherlands
 *
 * This file is part of the Articulated Social Agents Platform BML realizer (ASAPRealizer).
 *
 * ASAPRealizer is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License (LGPL) as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * ASAPRealizer is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with ASAPRealizer.  If not, see http://www.gnu.org/licenses/.
 ******************************************************************************/
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yarp;

public class Searchable {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Searchable(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Searchable obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        yarpJNI.delete_Searchable(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean check(String key) {
    return yarpJNI.Searchable_check__SWIG_0(swigCPtr, this, key);
  }

  public boolean check(String key, String comment) {
    return yarpJNI.Searchable_check__SWIG_1(swigCPtr, this, key, comment);
  }

  public Value find(String key) {
    return new Value(yarpJNI.Searchable_find(swigCPtr, this, key), false);
  }

  public Bottle findGroup(String key) {
    return new Bottle(yarpJNI.Searchable_findGroup__SWIG_0(swigCPtr, this, key), false);
  }

  public Bottle findGroup(String key, String comment) {
    return new Bottle(yarpJNI.Searchable_findGroup__SWIG_1(swigCPtr, this, key, comment), false);
  }

  public boolean check(String key, SWIGTYPE_p_p_yarp__os__Value result, String comment) {
    return yarpJNI.Searchable_check__SWIG_2(swigCPtr, this, key, SWIGTYPE_p_p_yarp__os__Value.getCPtr(result), comment);
  }

  public boolean check(String key, SWIGTYPE_p_p_yarp__os__Value result) {
    return yarpJNI.Searchable_check__SWIG_3(swigCPtr, this, key, SWIGTYPE_p_p_yarp__os__Value.getCPtr(result));
  }

  public Value check(String key, Value fallback, String comment) {
    return new Value(yarpJNI.Searchable_check__SWIG_4(swigCPtr, this, key, Value.getCPtr(fallback), fallback, comment), true);
  }

  public Value check(String key, Value fallback) {
    return new Value(yarpJNI.Searchable_check__SWIG_5(swigCPtr, this, key, Value.getCPtr(fallback), fallback), true);
  }

  public boolean isNull() {
    return yarpJNI.Searchable_isNull(swigCPtr, this);
  }

  public String toString() {
    return yarpJNI.Searchable_toString(swigCPtr, this);
  }

  public void setMonitor(SearchMonitor monitor, String context) {
    yarpJNI.Searchable_setMonitor__SWIG_0(swigCPtr, this, SearchMonitor.getCPtr(monitor), monitor, context);
  }

  public void setMonitor(SearchMonitor monitor) {
    yarpJNI.Searchable_setMonitor__SWIG_1(swigCPtr, this, SearchMonitor.getCPtr(monitor), monitor);
  }

  public SearchMonitor getMonitor() {
    long cPtr = yarpJNI.Searchable_getMonitor(swigCPtr, this);
    return (cPtr == 0) ? null : new SearchMonitor(cPtr, false);
  }

  public String getContext() {
    return yarpJNI.Searchable_getContext(swigCPtr, this);
  }

  public void reportToMonitor(SearchReport report) {
    yarpJNI.Searchable_reportToMonitor(swigCPtr, this, SearchReport.getCPtr(report), report);
  }

}
